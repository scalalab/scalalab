
// performs FFT both with NVIDIA CUDA, and with Java, comparing execution times

var N = 2^^^22   // signal length
  
var x = new Array[Float](N)  // a float array
var dx = new Array[Double](N)  // a double array

var k=0
while (k< N)  {
  x(k) = (4.5*sin(0.03*k)+rand).toFloat 
  dx(k) = x(k)
  k += 1
  }
  
var realImffts = new Array[Float](N)

// construct a CUDA Kernel operations object
var co = new CUDAOps.KernelOps

// perform FFT with CUDA. 
// Real and Imaginary FFT coefficients are returned in realImffts array
tic
co.cudafft(x, N, realImffts)
var tmCUDAfft = toc
// 0.027 vs 0.58 Java vs 0.087 MATLAB

// seperate real and imaginary coefficients
var N2 = N/2
var realffts = new Array[Float](N2)
var imffts = new Array[Float](N2)

var cnt=0; var elem=0 
while (cnt<N) {
  realffts(elem) = realImffts(cnt)
  cnt+=1
  imffts(elem) = realImffts(cnt)
  cnt+=1
  elem+=1
  }
    
    
    figure(1);
    subplot(3,1,1); plot(x, "signal")
    subplot(3,1,2); plot(realffts, "real coefficients of FFT");
    subplot(3,1,3); plot(imffts, "imaginary coefficients of FFT");
    
 // perform an FFT with Java for comparing the execution times
    tic
    var (jfft_real, jfft_im) = fft(dx)
    var tmJAVAfft = toc
    
    