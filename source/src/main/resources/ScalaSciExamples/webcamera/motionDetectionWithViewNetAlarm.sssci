import java.awt.Dimension
import java.awt.FlowLayout
import javax.swing.JFrame
import javax.swing.JLabel
import javax.swing.SwingUtilities
import com.github.sarxos.webcam._

import java.io.DataInputStream
import java.io.DataOutputStream
import java.io.InputStream
import java.io.PrintStream
import java.net.ServerSocket
import java.net.Socket

val PortForAlarmServer = 8000  // port on which the alarm server waits
val motionDetectedFlag = 111.111 // send this value to signal alarm to the client

var sc = new ServerSocket(PortForAlarmServer)    //  ServerSocket on which the motion detection alarm server waits
var conn: Socket = null  // sdcket for accepting client connections
var in: DataInputStream = null
var out: DataOutputStream =  null

// this thread initializes the proper streams with the client
// when such client has requested the alarm service
 thread {
     conn = sc.accept()
     in = new DataInputStream(conn.getInputStream())
     out = new DataOutputStream(conn.getOutputStream())
  }
  



var motionDetector = new DetectMotionExample

class DetectMotionExample extends JFrame with  Runnable with WebcamMotionListener {

   var INTERVAL = 100  // ms


   var  webcam = Webcam.getDefault()
   
        
        var  updater = new Thread(this, "updater-thread")
        updater.setDaemon(true)
        updater.start()
             
                
        setTitle("Motion Detector")
        setLayout(new FlowLayout())

        webcam.setViewSize(new Dimension(640, 480))

        var panel = new WebcamPanel(webcam)   // the panel for displaying the Web camera image stream

        add(panel)

        pack()
        setVisible(true)
        
        override def  run() = {

                var  detector = new WebcamMotionDetector(webcam)
                detector.setInterval(INTERVAL)
                detector.addMotionListener(this)
                detector.start()

                        
                }

  override def motionDetected( wme: WebcamMotionEvent) {
                //println("Detected motion I, alarm turn on you have");
  //java.awt.Toolkit.getDefaultToolkit().beep()
   tone(400,1000)

//  a thread to sent the alarm over the internet connection using sockets
   thread {
       if (out != null) {
     out.writeDouble(motionDetectedFlag) 
     out.flush       
      }
     }

    }
        
        }
        
        